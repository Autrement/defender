{"name":"Defender","body":"### Defender\r\n\r\nDefender is a wrapper for the [Defensio](http://defensio.com) spam filtering \r\nAPI. From their own site:\r\n\r\n> More than just another spam filter, Defensio also eliminates malware and\r\n> other unwanted or risky content to fully protect your blog or Web 2.0\r\n> application.\r\n\r\n#### Installing\r\n\r\nIn **Rails 3**, add this to your Gemfile and run the `bundle` command.\r\n\r\n```ruby\r\ngem 'defender'\r\n```\r\n\r\nIf you want to live on the bleeding edge, you can use the git repo. YMMV.\r\n\r\n```ruby\r\ngem 'defender', :git => 'git://github.com/dvyjones/defender.git'\r\n```\r\n\r\nFor any other kind of web framework, just install the `defender` gem, and\r\n`require 'defender'` somewhere in your code.\r\n\r\n#### Getting Started\r\n\r\nI'm going to assume that you already have a comment model. The comment model\r\nis required to have at least a content or body field.\r\n\r\n##### 1. Create an initializer\r\n\r\nYou need to provide Defender with your API key. The preferred way of doing\r\nthis is with an initializer file. Create a file in the `config/initializers`\r\nfolder, and put the following line in it.\r\n\r\n```ruby\r\nDefender.api_key = 'YOUR_API_KEY'\r\n```\r\n\r\n##### 2. Add the required fields to your model\r\n\r\nYou need to add a boolean field named `spam`, and a string field named\r\n`defensio_sig` to your model. You should also add a float field named\r\n`spaminess`, although this isn't required. Here's an example migration for\r\nActive Record:\r\n\r\n```ruby\r\nclass AddDefenderFieldsToComments < ActiveRecord::Migration\r\n  def change\r\n    add_column :comments, :spam, :boolean\r\n    add_column :comments, :defensio_sig, :string\r\n    add_column :comments, :spaminess, :float\r\n  end\r\nend\r\n```\r\n\r\n##### 3. Configure the model\r\n\r\nIn your model, `include Defender::Spammable`. If the model attributes match up\r\nwith what Defender autodetects (check the wiki), you are now good to go! The\r\n`spam` attribute will be automatically updated by Defender when you save the\r\nmodel.\r\n\r\nIf you need to change any of the attributes, you can pass `configure_defender`\r\nthe mappings, like this:\r\n\r\n```ruby\r\nclass Comment < ActiveRecord::Base\r\n    include Defender::Spammable\r\n    configure_defender :keys => { 'content' => :data }\r\nend\r\n```\r\n\r\nIn this example, `'content'` is the Defensio field, and `:data` is the model\r\nattribute.\r\n\r\n#### Contributing\r\n\r\n1. Fork it.\r\n2. Create a branch (`git checkout -b add-resque-support`)\r\n3. Make your changes\r\n4. Commit your changes (`git commit -am \"Added support for Resque\"`)\r\n5. Push to the branch (`git push origin add-resque-support`)\r\n6. Create a [Pull Request](http://help.github.com/pull-requests/) from your branch.\r\n7. Promote it. Get others to drop in and +1 it.","tagline":"Defender is a wrapper for the Defensio spam filtering API written in Ruby.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}